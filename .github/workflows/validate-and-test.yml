name: Validate & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  validate_and_test:
    runs-on: ubuntu-latest
    # Using a single Python version for now
    # To simplify CI, we're not testing against multiple Python versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Find all deck directories
        id: find-decks
        run: |
          DECK_DIRS=$(find decks -mindepth 1 -maxdepth 1 -type d | tr '\n' ' ')
          echo "Found deck directories: $DECK_DIRS"
          echo "deck_dirs=$DECK_DIRS" >> $GITHUB_OUTPUT

      - name: Validate all decks
        run: python validate.py ${{ steps.find-decks.outputs.deck_dirs }}

      - name: Run code formatting
        run: black .

      - name: Run linting
        run: python lint.py

      - name: Run type checking
        run: mypy --ignore-missing-imports *.py tests/*.py

      - name: Run security scanning
        run: |
          bandit -r . -x ./tests --severity-level high
          # Try the new scan command first, fall back to check if it fails
          safety scan || safety check

      - name: Run tests with coverage
        run: pytest --cov=. --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: validate_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build decks
        run: |
          python generate.py --mode per-level
          python generate.py --mode uber

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anki-decks
          path: output/*.apkg
